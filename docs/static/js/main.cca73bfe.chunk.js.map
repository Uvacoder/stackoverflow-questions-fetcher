{"version":3,"sources":["ui/components/LoadingPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoadingPage","React","memo","color","size","App","Layout","lazy","Suspense","fallback","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HAAA,qEAKMA,EAAcC,IAAMC,MAAK,WAC7B,OAAO,cAAC,qBAAD,CAAoBC,MAAM,UAAUC,KAAK,c,mJCgCnCC,MAhBf,WACE,IAAMC,EAASL,IAAMM,MAAK,kBAAM,wDAEhC,OACE,8BACE,cAAC,IAAD,UACE,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAACT,EAAA,EAAD,IAA1B,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOU,KAAM,IAAKC,UAAWL,aChB1BM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cca73bfe.chunk.js","sourcesContent":["// @ts-nocheck\r\n/* eslint-disable */\r\nimport React from \"react\";\r\nimport { DisappearedLoading, BlockLoading } from \"react-loadingg\";\r\n\r\nconst LoadingPage = React.memo(() => {\r\n  return <DisappearedLoading color=\"#4055c5\" size=\"Large\" />;\r\n});\r\n\r\nconst LoadingBlock = React.memo(() => {\r\n  return <BlockLoading size=\"Large\" />;\r\n});\r\n\r\nexport { LoadingPage, LoadingBlock };\r\n","/* eslint-disable */\n//@ts-nocheck\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport {\n  Container,\n  Header,\n  Content,\n  Footer,\n  Sidebar,\n  Navbar,\n  Nav,\n  Dropdown,\n  Button,\n} from \"rsuite\";\nimport { LoadingPage } from \"./ui/components/LoadingPage\";\nfunction App() {\n  const Layout = React.lazy(() => import(\"./ui/views/Layout\"));\n\n  return (\n    <div>\n      <Router>\n        <React.Suspense fallback={<LoadingPage />}>\n          <Switch>\n            <Route path={\"/\"} component={Layout} />\n          </Switch>\n        </React.Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/styles/App.css\";\n// import default style\nimport \"rsuite/dist/rsuite.min.css\";\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}